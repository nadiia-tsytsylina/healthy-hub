{"version":3,"file":"static/js/93.9a139f1d.chunk.js","mappings":"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","sources":["assets/images/icons/arrow-right.svg","pages/DashboardPage/DashboardPage.styled.jsx","utils/DashBoard/avarageValue.js","pages/DashboardPage/Calories/Calories.jsx","pages/DashboardPage/Water/Water.jsx","pages/DashboardPage/Weight/Weight.jsx","utils/DashBoard/getMonthOrYear.js","pages/DashboardPage/SelectPeriod/SelectPeriod.styled.jsx","pages/DashboardPage/SelectPeriod/SelectPeriod.jsx","pages/DashboardPage/DashboardPage.jsx"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.62012 3.95312L13.6668 7.99979L9.62012 12.0465\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.33301 8H13.553\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.d0c0c26f156afde714dd6305bb874a9a.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const Frame = styled('div')`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 834px) {\n    margin-top: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 20px;\n  }\n`;\n\nexport const GraphicsFrame = styled('div')`\n  display: flex;\n  flex-direction: column;\n  gap: 27px;\n  margin-bottom: 27px;\n\n  @media screen and (min-width: 834px) {\n    gap: 40px;\n    margin-bottom: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 20px;\n  }\n`;\n\nexport const GraficFrame = styled('div')`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const GraphicHeader = styled('div')`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 6px;\n\n  @media screen and (min-width: 834px) {\n    justify-content: left;\n    gap: 40px;\n  }\n`;\n\nexport const GraphicTitle = styled('p')`\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 144.44%;\n  color: var(--text-color-primary-white);\n\n  @media screen and (min-width: 834px) {\n    font-size: 22px;\n    line-height: 145.5%;\n  }\n`;\n\nexport const Avarage = styled('p')`\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 143%;\n  color: var(--text-color-primary-white);\n`;\n\nexport const Value = styled('span')`\n  font-weight: 500;\n  margin-left: 6px;\n`;\n\nexport const GraphicBody = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 780px;\n  height: 382px;\n  background-color: var(--bg-secondary);\n  border-radius: 12px;\n\n  @media screen and (min-width: 1440px) {\n    width: 676px;\n    height: 382px;\n  }\n`;\n\nexport const WeightBody = styled('div')`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 834px) {\n    margin-bottom: 60px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 60px;\n  }\n`;\n\nexport const WeigthFrame = styled('div')`\n  width: 780px;\n  height: 110px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: auto;\n  justify-content: space-between;\n  padding: 24px 24px 36px 24px;\n  border-radius: 12px;\n  background-color: var(--bg-secondary);\n\n  @media screen and (min-width: 1440px) {\n    width: 1372px;\n  }\n`;\n\nexport const WeigthItem = styled('div')`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  align-items: center;\n  font-family: Poppins;\n  font-style: normal;\n  font-weight: 400;\n  color: var(--text-color-primary-white);\n`;\n\nexport const WeightData = styled('div')`\n  font-size: 14px;\n  line-height: 143%;\n`;\n\nexport const WeightDate = styled('div')`\n  font-size: 10px;\n  line-height: 140%;\n  color: var(--text-color-secondary-grey);\n`;\n\nexport const CaloriesFrame = styled('div')``;\nexport const WaterFrame = styled('div')``;\n\nexport const ScrollWrap = styled('div')`\n  @media screen and (max-width: 833px) {\n    width: 310px;\n    padding-bottom: 8px;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    scroll-behavior: smooth;\n\n    &::-webkit-scrollbar {\n      height: 8px;\n      width: 94px;\n\n      background-color: var(--bg-secondary);\n      border-radius: 12px;\n    }\n\n    &::-webkit-scrollbar-track {\n      border-radius: 12px;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.1);\n      border-radius: 12px;\n    }\n  }\n`;\nexport const Stub = styled('p')`\n  margin: auto;\n`","export const avarageValue = data => {\n  const numbers = data.map(({ value }) => value);\n  const quantity = numbers.length;\n  const total = numbers.reduce((prevValue, number) => {\n    return prevValue + number;\n  }, 0);\n\n  const result = total / quantity;\n  if (result > 999) {\n    return result.toFixed(0);\n  }\n  if (result < 999) {\n    return result.toFixed(1);\n  }\n};\n","import { getDate, parseISO } from 'date-fns';\nimport {\n  GraphicHeader,\n  GraphicBody,\n  GraficFrame,\n  ScrollWrap,\n  GraphicTitle,\n  Avarage,\n  Value,\n} from '../DashboardPage.styled';\nimport { avarageValue } from '../../../utils/DashBoard/avarageValue';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  LineElement,\n  CategoryScale,\n  PointElement,\n} from 'chart.js';\n\nChartJS.register(LineElement, CategoryScale, PointElement);\n\nexport const Calories = ({ name, data: dataCalories, period }) => {\n  if (!dataCalories) {\n    return;\n  }\n\n  const lables = dataCalories.map(({ date }) => {\n    if (period.value === 'lastYear') {\n      return date.substring(0, 3);\n    }\n    return getDate(parseISO(date));\n  });\n\n  const caloriesData = dataCalories.map(({ value }) => value);\n\n  const titleTooltip = tooltipItems => {\n    return '';\n  };\n\n  const data = {\n    labels: lables,\n\n    datasets: [\n      {\n        data: caloriesData,\n        tension: 0.1,\n        borderColor: 'rgba(227, 255, 168, 1)',\n        backgroundColor: 'rgba(227, 255, 168, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false,\n    },\n    layout: {\n      padding: {\n        left: 14,\n        right: 31,\n        top: 25,\n        bottom: 24,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        shadowOffsetX: 3,\n        shadowOffsetY: 3,\n        shadowBlur: 10,\n        shadowColor: 'rgba(231, 219, 219, 0.5)',\n\n        yAlign: false,\n        displayColors: false,\n        cornerRadius: 8,\n        backgroundColor: '#0F0F0F',\n        titleColor: '#FFF',\n        bodyAlign: 'center',\n        footerAlign: 'center',\n        shadow: '0px 4px 14px 0px rgba(227, 255, 168, 0.20)',\n        bodyFont: {\n          size: 32,\n          weight: 'bold',\n          family: 'Poppins',\n          lineHeight: 1.19,\n          style: 'normal',\n        },\n        caretSize: 0,\n        footerFont: {\n          size: 14,\n          weight: 'normal',\n          family: 'Poppins',\n          lineHeight: 1.43,\n          style: 'normal',\n        },\n        footerColor: '#B6B6B6',\n        callbacks: {\n          title: titleTooltip,\n          footer: function (context) {\n            return 'milliliters';\n          },\n        },\n      },\n    },\n    pointRadius: 0,\n    scales: {\n      y: {\n        color: '#B6B6B6',\n        min: 0,\n        max: 3000,\n        ticks: {\n          padding: 8,\n          stepSize: 1000,\n          callback: value => {\n            if (value !== 0) {\n              return value / 1000 + 'K';\n            }\n            if (value === 0) {\n              return value;\n            }\n          },\n        },\n        grid: {\n          lineWidth: 0.5,\n          color: 'rgba(182, 182, 182, 1)',\n          drawTicks: false,\n        },\n      },\n      x: {\n        stacked: true,\n        beginAtZero: false,\n        color: '#B6B6B6',\n        ticks: {\n          padding: 6,\n        },\n\n        grid: {\n          lineWidth: 0.5,\n          color: 'rgba(182, 182, 182, 1)',\n          drawTicks: false,\n        },\n        min: 0,\n        max: 31,\n      },\n    },\n  };\n\n  return (\n    <>\n      <GraficFrame>\n        <GraphicHeader>\n          <GraphicTitle>{name}</GraphicTitle>\n          <Avarage>\n            Avarage value:<Value>{avarageValue(dataCalories)} cal</Value>\n          </Avarage>\n        </GraphicHeader>\n        <ScrollWrap>\n          <GraphicBody>\n            {dataCalories.length ? (\n              <Line data={data} options={options}></Line>\n            ) : (\n              <p> Created by HealthyHub🍎Team</p>\n            )}\n          </GraphicBody>\n        </ScrollWrap>\n      </GraficFrame>\n    </>\n  );\n};\n","import { getDate, parseISO } from 'date-fns';\nimport {\n  GraphicHeader,\n  GraphicBody,\n  GraficFrame,\n  ScrollWrap,\n  GraphicTitle,\n  Avarage,\n  Value,\n} from '../DashboardPage.styled';\nimport { avarageValue } from 'utils/DashBoard/avarageValue';\nimport { Line } from 'react-chartjs-2';\n\nimport {\n  Chart as ChartJS,\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  Tooltip,\n} from 'chart.js';\n\nChartJS.register(\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  Tooltip\n);\n\nexport const Water = ({ name, data: dataWater, period }) => {\n  if (!dataWater) {\n    return;\n  }\n\n  const lables = dataWater.map(({ date }) => {\n    if (period.value === 'lastYear') {\n      return date.substring(0, 3);\n    }\n    return getDate(parseISO(date));\n  });\n\n  const waterData = dataWater.map(({ value }) => {\n    return value;\n  });\n\n  const titleTooltip = tooltipItems => {\n    return '';\n  };\n\n  const data = {\n    type: 'line',\n    labels: lables,\n    datasets: [\n      {\n        data: waterData,\n        tension: 0.1,\n        borderColor: 'rgba(227, 255, 168, 1)',\n        spanGaps: true,\n        backgroundColor: 'rgba(227, 255, 168, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false,\n    },\n    layout: {\n      padding: {\n        left: 14,\n        right: 31,\n        top: 25,\n        bottom: 24,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        shadowOffsetX: 3,\n        shadowOffsetY: 3,\n        shadowBlur: 10,\n        shadowColor: 'rgba(231, 219, 219, 0.5)',\n\n        yAlign: false,\n        displayColors: false,\n        cornerRadius: 8,\n        backgroundColor: '#0F0F0F',\n        titleColor: '#FFF',\n        bodyAlign: 'center',\n        footerAlign: 'center',\n        shadow: '0px 4px 14px 0px rgba(227, 255, 168, 0.20)',\n        bodyFont: {\n          size: 32,\n          weight: 'bold',\n          family: 'Poppins',\n          lineHeight: 1.19,\n          style: 'normal',\n        },\n        caretSize: 0,\n        footerFont: {\n          size: 14,\n          weight: 'normal',\n          family: 'Poppins',\n          lineHeight: 1.43,\n          style: 'normal',\n        },\n        footerColor: '#B6B6B6',\n        callbacks: {\n          title: titleTooltip,\n          footer: function (context) {\n            return 'milliliters';\n          },\n        },\n      },\n    },\n    pointRadius: 0,\n    scales: {\n      y: {\n        color: '#B6B6B6',\n        min: 0,\n        max: 3000,\n        ticks: {\n          padding: 8,\n          stepSize: 1000,\n          callback: value => {\n            if (value !== 0) {\n              return value / 1000 + 'K';\n            }\n            if (value === 0) {\n              return value;\n            }\n          },\n        },\n        grid: {\n          lineWidth: 0.5,\n          color: 'rgba(182, 182, 182, 1)',\n          drawTicks: false,\n        },\n      },\n      x: {\n        stacked: true,\n        beginAtZero: false,\n        color: '#B6B6B6',\n        ticks: {\n          padding: 6,\n        },\n\n        grid: {\n          lineWidth: 0.5,\n          color: 'rgba(182, 182, 182, 1)',\n          drawTicks: false,\n        },\n        min: 0,\n        max: 31,\n      },\n    },\n  };\n\n  return (\n    <>\n      <GraficFrame>\n        <GraphicHeader>\n          <GraphicTitle>{name}</GraphicTitle>\n          <Avarage>\n            Avarage value:<Value>{avarageValue(dataWater)} ml</Value>\n          </Avarage>\n        </GraphicHeader>\n        <ScrollWrap>\n          <GraphicBody>\n            {dataWater.length ? (\n              <Line data={data} options={options}></Line>\n            ) : (\n              <p>Created by HealthyHub🍎Team</p>\n            )}\n          </GraphicBody>\n        </ScrollWrap>\n      </GraficFrame>\n    </>\n  );\n};\n","import { nanoid } from 'nanoid';\nimport { getDate, parseISO } from 'date-fns';\nimport { avarageValue } from 'utils/DashBoard/avarageValue';\nimport {\n  WeightBody,\n  WeigthFrame,\n  WeigthItem,\n  ScrollWrap,\n  GraphicHeader,\n  GraphicTitle,\n  Avarage,\n  Value,\n  WeightData,\n  WeightDate,\n  Stub,\n} from '../DashboardPage.styled';\n\nexport const Weight = ({ name, data: dataWeight, period }) => {\n  if (!dataWeight) {\n    return;\n  }\n\n  const dateOrMonth = (date, period) => {\n    if (period.value === 'lastYear') {\n      return date.substring(0, 3);\n    }\n    return getDate(parseISO(date));\n  }\n\n  return (\n    <>\n      <WeightBody>\n        <GraphicHeader>\n          <GraphicTitle>{name}</GraphicTitle>\n          <Avarage>\n            Avarage value:<Value>{avarageValue(dataWeight)} kg</Value>\n          </Avarage>\n        </GraphicHeader>\n        <ScrollWrap>\n          <WeigthFrame>\n            {dataWeight.length ? (\n              dataWeight.map(({ value, date }) => {\n                return (\n                  <WeigthItem key={nanoid()}>\n                    <WeightData>{value}</WeightData>\n                    <WeightDate>{dateOrMonth(date, period)}</WeightDate>\n                  </WeigthItem>\n                );\n              })\n            ) : (\n              <Stub> Created by HealthyHub🍎Team</Stub>\n            )}\n          </WeigthFrame>\n        </ScrollWrap>\n      </WeightBody>\n    </>\n  );\n};\n","export const getMonthOrYear = (data, period) => {\n  if (period === 'lastYear' && data.length > 0) {\n    const per = data[0];\n\n    const result = new Date(per.date);\n\n    return result.toLocaleString('en-US', { month: 'long' });\n  }\n\n  if (period === 'lastMonth' && data.length > 0) {\n    const result = new Date();\n\n    return result.getFullYear();\n  }\n\n  return;\n};\n","import styled from 'styled-components';\nimport { ReactComponent as Arrow } from '../../../assets/images/icons/arrow-right.svg';\n\nexport const SelectFrame = styled('div')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n`;\nexport const SelectAndBackWrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n  font-family: Poppins;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 125%;\n  color: var(--text-color-primary-white);\n\n  @media screen and (min-width: 834px) {\n    gap: 12px;\n    font-size: 30px;\n    line-height: 120%;\n  }\n`;\n\nexport const DateTitle = styled('p')`\n  font-family: Poppins;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 138%;\n  color: var(--text-color-primary-white);\n\n  @media screen and (min-width: 834px) {\n    font-size: 18px;\n    line-height: 133%;\n  }\n`;\n\nexport const ArrowWrap = styled(Arrow)`\n  width: 16px;\n  height: 16px;\n\n  @media screen and (min-width: 1440px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport { useState } from 'react';\nimport { getMonthOrYear } from 'utils/DashBoard/getMonthOrYear';\nimport {\n  SelectFrame,\n  SelectAndBackWrapper,\n  DateTitle,\n  ArrowWrap,\n} from './SelectPeriod.styled';\n\nexport const SelectPeriod = ({ onChange, data }) => {\n  const [toggleSelect, setToggleSelect] = useState({\n    value: 'lastYear',\n    label: 'Last Year',\n  });\n\n  const changeOption = () => {\n    if (toggleSelect.value === 'lastMonth') {\n      setToggleSelect({\n        value: 'lastYear',\n        label: 'Last Year',\n      });\n    }\n    if (toggleSelect.value === 'lastYear') {\n      setToggleSelect({\n        value: 'lastMonth',\n        label: 'Last Month',\n      });\n    }\n    onChange(toggleSelect);\n\n    return;\n  };\n\n  const options = [toggleSelect];\n\n  return (\n    <SelectFrame>\n      <SelectAndBackWrapper>\n        <Link to={'/'}>\n          <ArrowWrap\n            style={{\n              transform: 'rotate(180deg)',\n            }}\n          />\n        </Link>\n        <Select\n          defaultValue={{ value: 'lastMonth', label: 'Last Month' }}\n          onChange={() => changeOption()}\n          menuPosition=\"fixed\"\n          options={options}\n          styles={{\n            control: baseStyles => ({\n              ...baseStyles,\n              backgroundColor: 'rgba(5, 5, 5, 1)',\n              border: 'none',\n              placeHolder: 'none',\n            }),\n            indicatorSeparator: () => ({\n              display: 'none',\n            }),\n\n            option: () => ({\n              width: '212px',\n              height: '64px',\n              margin: '0',\n              paddingLeft: '12px',\n              display: 'flex',\n              alignItems: 'center',\n              position: 'relative',\n              borderRadius: '12px',\n              backgroundColor: 'rgba(5, 5, 5, 1)',\n            }),\n            menu: () => ({\n              width: '212px',\n              height: '64px',\n              borderRadius: '12px',\n              boxShadow: '0px 4px 14px 0px rgba(227, 255, 168, 0.20)',\n              cursor: 'pointer',\n              position: 'absolute',\n            }),\n            singleValue: () => ({\n              margin: '0',\n            }),\n            valueContainer: () => ({\n              padding: '0px',\n            }),\n\n            dropdownIndicator: baseStyles => ({\n              color: 'rgba(227, 255, 168, 1)',\n              marginLeft: '12px',\n            }),\n            placeholder: () => ({\n              display: 'none',\n            }),\n            input: () => ({\n              display: 'none',\n              padding: '0px',\n            }),\n          }}\n        />\n      </SelectAndBackWrapper>\n      <DateTitle>{data && getMonthOrYear(data, toggleSelect.value)}</DateTitle>\n    </SelectFrame>\n  );\n};\n\n// getMonthOrYear(data, toggleSelect.value);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { Calories } from './Calories/Calories';\nimport { Water } from './Water/Water';\nimport { Weight } from './Weight/Weight';\nimport { SelectPeriod } from './SelectPeriod/SelectPeriod';\n\nimport {\n  Frame,\n  GraphicsFrame,\n  CaloriesFrame,\n  WaterFrame,\n} from './DashboardPage.styled';\nimport { fetchStatistics } from 'redux/statistic/operations';\n\nconst DashboardPage = () => {\n  const [data, setData] = useState({ value: 'lastMonth', label: 'Last Month' });\n\n  const statistics = useSelector(state => state.statistics.statistics);\n\n  const waterData = statistics?.water[data.value];\n  const caloriesData = statistics?.calories[data.value];\n  const weightData = statistics?.weight[data.value];\n\n  const dispatch = useDispatch();\n\n  const onChange = dat => {\n    setData(dat);\n  };\n\n  useEffect(() => {\n    if (!statistics) {\n      dispatch(fetchStatistics());\n    }\n  }, [dispatch, statistics]);\n\n  return (\n    <>\n      <Frame>\n        <SelectPeriod onChange={onChange} data={waterData} />\n        <GraphicsFrame>\n          <CaloriesFrame>\n            <Calories name=\"Calories\" data={caloriesData} period={data} />\n          </CaloriesFrame>\n          <WaterFrame>\n            <Water name=\"Water\" data={waterData} period={data} />\n          </WaterFrame>\n        </GraphicsFrame>\n        <Weight name=\"Weight\" data={weightData} period={data} />\n      </Frame>\n    </>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["_path","_path2","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgArrowRight","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeMiterlimit","strokeLinecap","strokeLinejoin","ForwardRef","Frame","styled","_templateObject","_taggedTemplateLiteral","GraphicsFrame","_templateObject2","GraficFrame","_templateObject3","GraphicHeader","_templateObject4","GraphicTitle","_templateObject5","Avarage","_templateObject6","Value","_templateObject7","GraphicBody","_templateObject8","WeightBody","_templateObject9","WeigthFrame","_templateObject10","WeigthItem","_templateObject11","WeightData","_templateObject12","WeightDate","_templateObject13","CaloriesFrame","_templateObject14","WaterFrame","_templateObject15","ScrollWrap","_templateObject16","Stub","_templateObject17","avarageValue","data","numbers","map","value","quantity","result","reduce","prevValue","number","toFixed","ChartJS","register","LineElement","CategoryScale","PointElement","Calories","name","dataCalories","period","labels","_ref2","date","substring","getDate","parseISO","datasets","_ref3","tension","borderColor","backgroundColor","borderWidth","options","maintainAspectRatio","interaction","mode","axis","intersect","layout","padding","left","right","top","bottom","plugins","legend","display","tooltip","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","yAlign","displayColors","cornerRadius","titleColor","bodyAlign","footerAlign","shadow","bodyFont","size","weight","family","lineHeight","style","caretSize","footerFont","footerColor","callbacks","tooltipItems","footer","context","pointRadius","scales","y","color","min","max","ticks","stepSize","callback","grid","lineWidth","drawTicks","x","stacked","beginAtZero","_jsx","_Fragment","children","_jsxs","Line","LinearScale","Tooltip","Water","dataWater","type","spanGaps","Weight","dataWeight","dateOrMonth","nanoid","getMonthOrYear","per","Date","toLocaleString","month","getFullYear","SelectFrame","SelectAndBackWrapper","DateTitle","ArrowWrap","Arrow","SelectPeriod","onChange","_useState","useState","label","_useState2","_slicedToArray","toggleSelect","setToggleSelect","changeOption","Link","to","transform","Select","defaultValue","menuPosition","styles","control","baseStyles","_objectSpread","border","placeHolder","indicatorSeparator","option","margin","paddingLeft","alignItems","position","borderRadius","menu","boxShadow","cursor","singleValue","valueContainer","dropdownIndicator","marginLeft","placeholder","input","setData","statistics","useSelector","state","waterData","water","caloriesData","calories","weightData","dispatch","useDispatch","useEffect","fetchStatistics","dat"],"sourceRoot":""}