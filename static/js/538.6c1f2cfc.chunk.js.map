{"version":3,"file":"static/js/538.6c1f2cfc.chunk.js","mappings":"kLAEaA,EAAOC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uTAmBjBC,EAAYJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2CAKtBG,EAAWN,EAAAA,GAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mHASrBK,EAAQR,EAAAA,GAAOS,GAAEC,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,gGAOjBQ,EAAYX,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,2FAOtBU,EAAWb,EAAAA,GAAOc,EAACC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,gG,+DCtCnBa,EAAkB,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KACxBC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,OAAaC,EAAoBH,EAAzBI,IAAYC,EAAaL,EAAbK,SAGlC,OACEC,EAAAA,EAAAA,MAACzB,EAAI,CAAA0B,SAAA,EACHC,EAAAA,EAAAA,KAACtB,EAAS,CAAAqB,UACRC,EAAAA,EAAAA,KAAA,OAAKC,IAAKN,EAAOO,IAAI,OAAOC,QAAS,SAAAC,GAAC,OAL5B,SAAAA,GAAC,OAAKA,EAAEC,OAAOJ,IAAMK,CAAO,CAKIH,CAAQC,EAAE,OAGtDN,EAAAA,EAAAA,MAAClB,EAAQ,CAAAmB,SAAA,EACPC,EAAAA,EAAAA,KAAClB,EAAK,CAAAiB,SAAEN,KACRK,EAAAA,EAAAA,MAACb,EAAS,CAAAc,SAAA,EACRC,EAAAA,EAAAA,KAAA,KAAAD,SAAIL,KACJI,EAAAA,EAAAA,MAACX,EAAQ,CAAAY,SAAA,CAAEF,EAAS,uBAK9B,C,uJC5BaU,EAAkBjC,EAAAA,GAAOkC,QAAOhC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8TAehCK,EAAQR,EAAAA,GAAOS,GAAEJ,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mRAiBjBgC,EAAmBnC,EAAAA,GAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4LAa7BiC,EAAYpC,EAAAA,GAAOsB,IAAGZ,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,kSAkBtBkC,EAAerC,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,8a,sIClBtC,EA7B4B,WAC1B,IAAMmC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,GAMpC,OAJKF,GACHF,GAASK,EAAAA,EAAAA,OAITnB,EAAAA,EAAAA,MAACS,EAAe,CAAAR,SAAA,EACdC,EAAAA,EAAAA,KAAClB,EAAK,CAAAiB,SAAC,sBACPD,EAAAA,EAAAA,MAACW,EAAgB,CAAAV,SAAA,EACfC,EAAAA,EAAAA,KAACU,EAAS,CACRQ,OAAM,GAAAC,OAAKC,EAAoB,SAAAD,OAAQE,EAAsB,OAC7DpB,IAAKmB,EACLlB,IAAI,0BAELY,IACCd,EAAAA,EAAAA,KAACW,EAAY,CAAAZ,UACVuB,EAAAA,EAAAA,GAAYR,EAAiB,IAAIS,KAAI,SAAAC,GAAO,OAC3CxB,EAAAA,EAAAA,KAACV,EAAAA,EAAe,CAAoBE,KAAMgC,GAApBA,EAAQ/B,KAAuB,WAOnE,C,uDC7CO,IAAM6B,EAAc,SAACG,GAAyB,IAAlBC,EAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACtCG,EAAgB,GACtB,GAAIL,EAAO,CACT,EAAG,CACD,IAAMM,EAAaC,KAAKC,MAAMD,KAAKE,UAAYT,EAAMG,OAAS,IAC1DE,EAAcK,SAASJ,IAGzBD,EAAcM,KAAKL,EAEvB,OAASD,EAAcF,SAAWF,GAElC,OAAOD,EAAMY,QAAO,SAACC,EAAGC,GAAG,OAAKT,EAAcK,SAASI,EAAI,GAC7D,CAEA,OAAOT,CACT,C","sources":["components/RecommendedCard/RecommendedCard.styled.jsx","components/RecommendedCard/RecommendedCard.jsx","pages/RecommendedFoodPage/RecommendedFoodPage.styled.jsx","pages/RecommendedFoodPage/RecommendedFoodPage.jsx","utils/randomArray.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  column-gap: 20px;\n  width: 300px;\n  height: 86px;\n  border-radius: 12px;\n  padding: 20px 24px;\n\n  background-color: var(--bg-secondary);\n\n  @media screen and (min-width: 834px) {\n    width: 380px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 328px;\n  }\n`;\n\nexport const CardImage = styled.div`\n  width: 46px;\n  height: 46px;\n`;\n\nexport const InfoWrap = styled.div`\n  width: 186px;\n  height: 46px;\n  overflow: hidden;\n\n  font-family: Poppins;\n  font-style: normal;\n`;\n\nexport const Title = styled.h3`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 24px;\n  margin-bottom: 2px;\n`;\n\nexport const ValueWrap = styled.div`\n  display: flex;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 20px;\n`;\n\nexport const Calories = styled.p`\n  font-weight: 500;\n  margin-left: 6px;\n  color: var(--text-color-secondary-grey);\n`;\n","import {\n  Card,\n  CardImage,\n  InfoWrap,\n  Title,\n  ValueWrap,\n  Calories,\n} from './RecommendedCard.styled';\n\nimport noImage from '../../assets/images/meal-periods/noimage.png';\n\nexport const RecommendedCard = ({ info }) => {\n  const { name, amount, img: image, calories } = info;\n  const onError = e => (e.target.src = noImage);\n\n  return (\n    <Card>\n      <CardImage>\n        <img src={image} alt=\"name\" onError={e => onError(e)} />\n      </CardImage>\n\n      <InfoWrap>\n        <Title>{name}</Title>\n        <ValueWrap>\n          <p>{amount}</p>\n          <Calories>{calories} calories</Calories>\n        </ValueWrap>\n      </InfoWrap>\n    </Card>\n  );\n};\n","import styled from 'styled-components';\n\nexport const RecommendedFood = styled.section`\n  background-color: var(--bg-primary);\n  color: var(--text-color-primary-white);\n  padding-top: 16px;\n  padding-bottom: 40px;\n\n  @media (min-width: 834px) {\n    padding-top: 24px;\n    padding-bottom: 290px;\n  }\n  @media (min-width: 1440px) {\n    padding-top: 20px;\n    padding-bottom: 60px;\n  }\n`;\nexport const Title = styled.h3`\n  font-family: 'Poppins';\n  font-weight: 500;\n  font-style: sans-serif;\n  font-size: 24px;\n  line-height: 1.25;\n\n  @media (min-width: 834px) {\n    font-size: 30px;\n    line-height: 1.2;\n  }\n\n  @media (min-width: 1440px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const DesctopContainer = styled.div`\n  padding-top: 16px;\n\n  @media (min-width: 834px) {\n    padding-top: 20px;\n  }\n  @media (min-width: 1440px) {\n    padding-top: 0;\n    display: flex;\n    gap: 44px;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  height: 312px;\n  width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (min-width: 834px) {\n    height: 396px;\n    width: 380px;\n  }\n  @media (min-width: 1440px) {\n    height: 560px;\n    width: 536px;\n    margin-right: 0;\n    margin-left: 110px;\n  }\n`;\n\nexport const ProductsList = styled.div`\n  @media (min-width: 320px) {\n    padding-top: 24px;\n    display: flex;\n    gap: 20px;\n    flex-direction: column;\n    align-items: center;\n  }\n  @media (min-width: 834px) {\n    width: 780px;\n    flex-wrap: wrap;\n    justify-content: center;\n    flex-direction: row;\n  }\n  @media (min-width: 1440px) {\n    width: 680px;\n    padding: 0;\n    display: flex;\n    row-gap: 20px;\n    column-gap: 24px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { getRecommendedFood } from 'redux/recommendedFood/selectors';\nimport { fetchRecommendedFood } from 'redux/recommendedFood/operations';\nimport { RecommendedCard } from 'components/RecommendedCard';\nimport { randomArray } from 'utils';\n\nimport {\n  RecommendedFood,\n  Title,\n  DesctopContainer,\n  StyledImg,\n  ProductsList,\n} from './RecommendedFoodPage.styled';\n\nimport RecommendedFoodPhoto2x from '../../assets/images/ketogenic-diet-2x.png';\nimport RecommendedFoodPhoto from '../../assets/images/ketogenic-diet.png';\n\nconst RecommendedFoodPage = () => {\n  const dispatch = useDispatch();\n  const recommendedFood = useSelector(getRecommendedFood);\n\n  if (!recommendedFood) {\n    dispatch(fetchRecommendedFood());\n  }\n\n  return (\n    <RecommendedFood>\n      <Title>Recommended food</Title>\n      <DesctopContainer>\n        <StyledImg\n          srcSet={`${RecommendedFoodPhoto} 1x, ${RecommendedFoodPhoto2x} 2x`}\n          src={RecommendedFoodPhoto}\n          alt=\"Profile Setting Photo\"\n        />\n        {recommendedFood && (\n          <ProductsList>\n            {randomArray(recommendedFood, 10).map(product => (\n              <RecommendedCard key={product.name} info={product} />\n            ))}\n          </ProductsList>\n        )}\n      </DesctopContainer>\n    </RecommendedFood>\n  );\n};\n\nexport default RecommendedFoodPage;\n","export const randomArray = (array, quantity = 4) => {\n  const randomNumbArr = [];\n  if (array) {\n    do {\n      const randomNumb = Math.round(Math.random() * (array.length - 1));\n      if (randomNumbArr.includes(randomNumb)) {\n        continue;\n      } else {\n        randomNumbArr.push(randomNumb);\n      }\n    } while (randomNumbArr.length !== quantity);\n\n    return array.filter((_, idx) => randomNumbArr.includes(idx));\n  }\n\n  return randomNumbArr;\n};\n"],"names":["Card","styled","div","_templateObject","_taggedTemplateLiteral","CardImage","_templateObject2","InfoWrap","_templateObject3","Title","h3","_templateObject4","ValueWrap","_templateObject5","Calories","p","_templateObject6","RecommendedCard","_ref","info","name","amount","image","img","calories","_jsxs","children","_jsx","src","alt","onError","e","target","noImage","RecommendedFood","section","DesctopContainer","StyledImg","ProductsList","dispatch","useDispatch","recommendedFood","useSelector","getRecommendedFood","fetchRecommendedFood","srcSet","concat","RecommendedFoodPhoto","RecommendedFoodPhoto2x","randomArray","map","product","array","quantity","arguments","length","undefined","randomNumbArr","randomNumb","Math","round","random","includes","push","filter","_","idx"],"sourceRoot":""}